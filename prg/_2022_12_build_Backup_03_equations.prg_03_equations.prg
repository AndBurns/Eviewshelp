'*******************************************************
' Potential GDP
'*******************************************************
	'BGD.append @identity {%cty}LMEMPSTRL = (1-{%cty}LMUNRSTRL/100)*({%cty}LMPRTSTRL_/100)*{%cty}SPPOP1564TO ' Structural employment
	
	BGD.append @IDENTITY {%cty}PSTAR  = ({%cty}NYWRTTOTLXN^{%cty}NYYWBTOTLCN_  * {%cty}NEKRTTOTLXN^(1  - {%cty}NYYWBTOTLCN_))  / ({%cty}NYGDPTFP  * {%cty}NYYWBTOTLCN_^{%cty}NYYWBTOTLCN_  * (1  - {%cty}NYYWBTOTLCN_)^(1  - {%cty}NYYWBTOTLCN_)) ' Nominal marginal cost

	BGD.append @IDENTITY BGDNYGDPPOTLKN = (BGDNYGDPTFP  * {%cty}LMEMPSTRL^BGDNYYWBTOTLCN_  * BGDNEGDIKSTKKN(-1)^(1-BGDNYYWBTOTLCN_))

	BGD.append @IDENTITY BGDNYGDPPOTLKD = (BGDNYGDPPOTLKN * (@elem(BGDNYGDPMKTPCN , 2015) / (@elem(BGDNYGDPMKTPKN , 2015)))) / @elem(BGDpanusatls , 2015)

	BGD.append @IDENTITY BGDNYGDPGAP_ = ((BGDNYGDPMKTPKN / BGDNYGDPPOTLKN - 1) * 100)
	BGD.append @IDENTITY BGDNEGDIKSTKKN = BGDNEGDIKSTKKN(-1) * (1 - BGDDEPR / 100) + BGDNEGDIFTOTKN
	
	BGD.append @IDENTITY BGDNEKRTTOTLXN = BGDNEGDIFTOTXN/100 * (BGDFMLBLPOLYFR + BGDNEKRTPREMFR + BGDDEPR - BGDINFLEXPT)
	
	BGD.append @IDENTITY BGDGDPPCKN = (BGDNYGDPMKTPKN / BGDSPPOPTOTL)
	BGD.append @IDENTITY BGDGDPPCKD = (BGDNYGDPMKTPKD / BGDSPPOPTOTL)
		
'*******************************************************
' NIA-Expenditures    
'*******************************************************
	'VOLUMES
		BGD.append @IDENTITY BGDNYGDPMKTPKN = BGDNECONPRVTKN + BGDNECONGOVTKN + BGDNEGDIFTOTKN + BGDNEGDISTKBKN + BGDNEEXPGNFSKN - BGDNEIMPGNFSKN + BGDNYGDPDISCKN

		BGD.append @IDENTITY BGDNEGDETTOTKN = (BGDNECONPRVTKN + BGDNECONGOVTKN + BGDNEGDIFTOTKN + BGDNEGDISTKBKN + BGDNYGDPDISCKN)  'Total Demand

		BGD.append @IDENTITY BGDNEGDIFTOTKN = BGDNEGDIFGOVKN + BGDNEGDIFPRVKN
		
		BGD.append @IDENTITY BGDNEGDIFGOVKN = BGDNEGDIFGOVCN / BGDNEGDIFGOVXN

		BGD.append @IDENTITY BGDNECONGOVTKN = BGDNECONGOVTCN / BGDNECONGOVTXN

		smpl 1986 %end_estimate
			c = 0
		equation _BGDNECONPRVTKN.LS DLOG(BGDNECONPRVTKN) = C(1) +  C(2) * (LOG(BGDNECONPRVTKN(-1)) - LOG((BGDNYYWBTOTLCN(-1)*(1-BGDGGREVDRCTER(-1)/100)+BGDBXFSTREMTCD(-1)*BGDPANUSATLS(-1)+BGDGGEXPTRNSCN(-1))/BGDNECONPRVTXN(-1))) + C(3) * DLOG((BGDNYYWBTOTLCN*(1-BGDGGREVDRCTER/100)+BGDBXFSTREMTCD*BGDPANUSATLS+BGDGGEXPTRNSCN)/BGDNECONPRVTXN)
		
		equation _BGDNYWRTTOTLXN.LS DLOG(BGDNYWRTTOTLXN) = C(1) +C(2)* (LOG(BGDNYWRTTOTLXN(-1)) - LOG(BGDNYGDPPOTLKN(-1)/BGDLMEMPSTRL(-1)) - LOG(BGDNYGDPFCSTXN(-1))) + C(3)*DLOG(BGDNYWRTTOTLXN(-1)) + (1-C(3))* (0.5*BGDINFLEXPT/100+0.5*DLOG(BGDNYGDPFCSTXN(-1))+DLOG(BGDNYGDPPOTLKN/BGDLMEMPSTRL)) - 0.1*(BGDLMUNRTOTL_-BGDLMUNRSTRL_)/100+C(10)*@DURING("1994")+C(11)*@DURING("1995")

			
			' EMPLOYMENT 
		equation _BGDLMEMPTOTL.LS DLOG(BGDLMEMPTOTL) =C(1)*(LOG(BGDLMEMPTOTL(-1))-LOG(BGDLMEMPSTRL(-1))) + DLOG(BGDLMEMPSTRL) - 0.1*(DLOG(BGDNYWRTTOTLXN/BGDNYGDPFCSTXN)-DLOG(BGDNYGDPPOTLKN/BGDLMEMPSTRL)) + C(3)*BGDNYGDPGAP_/100+C(4)+C(10)*@DURING("2016")+C(11)*@DURING("2017")

		' LABOR FORCE PARTICIPATION
		equation _BGDLMPRTTOTL_.LS BGDLMPRTTOTL_ = C(1)*(BGDLMPRTSTRL_) + (1-C(1))*(BGDLMPRTTOTL_(-1))

		' UNEMPLOYMENT RATE		
		'{%cty}LMUNRTOTL = (1-BGDLMEMPTOTL/(({%cty}LMPRTTOTL_/100)*{%cty}SPPOP1564TO))*100
		
		BGD.append @IDENTITY BGDNYYWBTOTLCN = {%cty}NYWRTTOTLXN*{%cty}LMEMPTOTL

		smpl %begin_date %end_estimate
		c = 0
		equation _BGDNEGDIFPRVKN.LS DLOG(BGDNEGDIFPRVKN) = C(1) + C(2) * (LOG(BGDNEGDIFPRVKN(-1)) - LOG(1-BGDNYYWBTOTLCN_(-1)) - LOG(BGDNYGDPPOTLKN(-1)) + LOG(BGDNEKRTTOTLXN(-1)/BGDNYGDPFCSTXN(-1))) + 1 * DLOG(BGDNYGDPMKTPKN) - 0.15 * DLOG(BGDNEKRTTOTLXN/BGDNEGDIFPRVXN)  + C(11) * @DURING("1989 1992")
		'equation _BGDNEGDIFPRVKN.LS DLOG(BGDNEGDIFPRVKN) = DLOG(BGDNYGDPPOTLKN)+C(10)
		
		' smpl %begin_date %end_estimate
		smpl 1988 %end_estimate
		c = 0
		equation _BGDNEEXPGNFSKN.LS DLOG(BGDNEEXPGNFSKN) = C(1) -0.3* (LOG(BGDNEEXPGNFSKN(-1)) - LOG(BGDXMKT(-1)) - 0.6 *LOG(BGDNEEXPGNFSXN(-1)/(BGDNYGDPFCSTXN(-1)))) + 0.6 * DLOG(BGDNEEXPGNFSXN/(BGDNYGDPFCSTXN)) +1 * DLOG(BGDXMKT)+C(10)*@DURING("2004 2018")

		smpl %begin_date %end_estimate
		c = 0

		'equation _BGDNEIMPGNFSKN.LS DLOG(BGDNEIMPGNFSKN) = C(1) - C(2) * (LOG(BGDNEIMPGNFSKN(-1)) - LOG(BGDNEGDETTOTKN(-1)) + C(3) * LOG(BGDNEIMPGNFSXN(-1)/(BGDNECONPRVTXN(-1)))) + 1.5 * DLOG(BGDNEGDETTOTKN) - C(3) * DLOG(BGDNEIMPGNFSXN/BGDNECONPRVTXN) + C(10) * T_LR
		
	'PRICES
		BGD.append @IDENTITY BGDNEGDIFTOTXN = BGDNEGDIFTOTCN / BGDNEGDIFTOTKN
		BGD.append @IDENTITY BGDNYGDPMKTPXN = BGDNYGDPMKTPCN / BGDNYGDPMKTPKN
		
		' smpl 2002 %end_estimate
		smpl 1986 %end_estimate
			c = 0
		''equation _BGDNYGDPFCSTXN.LS @PC(BGDNYGDPFCSTXN) = BGDINFLEXPT + C(10) * @DURING("1996") + C(11) * @DURING("1991 1994") + 0.5 * BGDNYGDPGAP_
		'equation _BGDNYGDPFCSTXN.LS DLOG(BGDNYGDPFCSTXN) =0.3*(0.7*LOG(1+BGDINFLEXPT/100)+(1-0.7)*DLOG(BGDPSTAR(-1))) +0.35*BGDNYGDPGAP_/100 + 0.7*DLOG(BGDNYGDPFCSTXN(-1))+C(10)*@DURING("1996")+C(11)*@DURING("1997")
		equation _BGDNYGDPFCSTXN.LS DLOG(BGDNYGDPFCSTXN) = C(1)*(LOG(BGDNYGDPFCSTXN(-1))-LOG(BGDPSTAR(-1)))+C(2)+C(3)*DLOG(BGDNYGDPFCSTXN(-1))+(1-C(3))*(0.7*(BGDINFLEXPT/100)+(1-0.7)*DLOG(BGDPSTAR(-1))) +0.35*BGDNYGDPGAP_/100
		
		' smpl %begin_date %end_estimate
		smpl 1997 %end_estimate
			c = 0
		'equation _BGDNECONPRVTXN.LS DLOG(BGDNECONPRVTXN) = C(1) - C(2) * (LOG(BGDNECONPRVTXN(-1)) - C(3) * LOG(BGDNYGDPFCSTXN(-1)) - (1-C(3)) * LOG(BGDNEIMPGNFSXN(-1)) - LOG((1+BGDGGREVTVATER(-1)/100)*(1+BGDGGREVEXCDER(-1)/100))) + C(4) * DLOG(BGDNYGDPFCSTXN) + (1-C(4)) * DLOG(BGDNEIMPGNFSXN) + DLOG((1+BGDGGREVTVATER/100)*(1+BGDGGREVEXCDER/100)) + C(10) * @DURING("1980 2002") + 0.15 * BGDNYGDPGAP_/100
		
		smpl %begin_date %end_estimate
			c = 0
		equation _BGDNECONGOVTXN.LS DLOG(BGDNECONGOVTXN) = C(1) +C(2) * (LOG(BGDNECONGOVTXN(-1)) - LOG(BGDNECONPRVTXN(-1))) + 1 * DLOG(BGDNECONPRVTXN)+C(10)*@DURING("1981 1982")
		
		smpl %begin_date %end_estimate
			c = 0
		equation _BGDNEGDIFGOVXN.LS(OPTMETHOD=LEGACY) DLOG(BGDNEGDIFGOVXN) = C(1) - C(2) * (LOG(BGDNEGDIFGOVXN(-1)) - LOG(BGDNECONPRVTXN(-1))) + C(3) * DLOG(BGDNECONPRVTXN) + (1-C(3)) * DLOG(BGDNEGDIFGOVXN(-1))

		smpl 2000 %end_estimate
			c = 0
		equation _BGDNEGDIFPRVXN.LS DLOG(BGDNEGDIFPRVXN) = C(1) + C(2) * (LOG(BGDNEGDIFPRVXN(-1)) - LOG(BGDNECONPRVTXN(-1))) + 1 * DLOG(BGDNECONPRVTXN)  + C(10) * @DURING("2008")
		
		smpl %begin_date %end_estimate
			c = 0
		equation _BGDNEEXPGNFSXN.LS DLOG(BGDNEEXPGNFSXN) = C(1) -0.3* (LOG(BGDNEEXPGNFSXN(-1)) - C(3) * LOG((1+BGDGGREVEXPDER(-1)/100)*BGDNYGDPFCSTXN(-1)) - (1-C(3)) * LOG(BGDPXKEY(-1)*BGDPANUSATLS(-1))) + C(4) * DLOG((1+BGDGGREVEXPDER/100)*BGDNYGDPFCSTXN) + (1-C(4)) * DLOG(BGDPXKEY*BGDPANUSATLS)+ C(10) * @DURING("2004")
		
		smpl %begin_date %end_estimate
			c = 0

		'equation _BGDNEIMPGNFSXN.LS DLOG(BGDNEIMPGNFSXN) = C(1) - 0.25 * (LOG(BGDNEIMPGNFSXN(-1)) - C(3) * LOG(BGDNECONPRVTXN(-1)/(1+BGDGGREVTVATER(-1)/100)) - (1-C(3)) * LOG((1+BGDGGREVIMPDER(-1)/100)*BGDPMKEY(-1)*BGDPANUSATLS(-1))) + C(4) * DLOG(BGDNECONPRVTXN/(1+BGDGGREVTVATER/100)) + (1-C(4)) * DLOG((1+BGDGGREVIMPDER/100)*BGDPMKEY*BGDPANUSATLS)  + C(10) * @DURING("2004") + C(11) * @DURING("1980 2003")
		
		smpl %begin_date %end_estimate
			c = 0
		equation _BGDFPCPITOTLXN.LS DLOG(BGDFPCPITOTLXN)= DLOG(BGDNECONPRVTXN) + C(1) * DUMH

	'VALUES
		BGD.append @IDENTITY BGDNYGDPMKTPCN = BGDNECONPRVTCN + BGDNECONGOVTCN + BGDNEGDIFTOTCN + BGDNEGDISTKBCN + BGDNEEXPGNFSCN - BGDNEIMPGNFSCN + BGDNYGDPDISCCN

		BGD.append @IDENTITY BGDNEGDETTOTCN = (BGDNECONPRVTCN + BGDNECONGOVTCN + BGDNEGDIFTOTCN + BGDNEGDISTKBCN + BGDNYGDPDISCCN)

		BGD.append @IDENTITY BGDNECONPRVTCN = BGDNECONPRVTKN * BGDNECONPRVTXN
		
		BGD.append @IDENTITY BGDNEGDIFTOTCN = BGDNEGDIFGOVCN + BGDNEGDIFPRVCN
		BGD.append @IDENTITY BGDNEGDIFPRVCN = BGDNEGDIFPRVKN * BGDNEGDIFPRVXN

		BGD.append @IDENTITY BGDNEEXPGNFSCN = BGDNEEXPGNFSKN * BGDNEEXPGNFSXN

		'BGD.append @IDENTITY BGDNEIMPGNFSCN = BGDNEIMPGNFSKN * BGDNEIMPGNFSXN
		
		smpl %begin_date %end_estimate
			c = 0
		'equation _BGDNECONGOVTCN.LS D(BGDNECONGOVTCN) = D(BGDGGEXPGNFSCN+BGDGGEXPWAGECN) * BGDNECONGOVTCOV_ / 100 + C(1)*DUMH
		equation _BGDNECONGOVTCN.LS @PC(BGDNECONGOVTCN) = @PC(BGDGGEXPGNFSCN+BGDGGEXPWAGECN) + C(1)*DUMH
	
		smpl %begin_date %end_estimate
			c = 0
		'equation _BGDNEGDIFGOVCN.LS D(BGDNEGDIFGOVCN) = D(BGDGGEXPCAPTCN) * BGDNEGDIFGOVCOV_ / 100 + C(1)*DUMH
		equation _BGDNEGDIFGOVCN.LS @PC(BGDNEGDIFGOVCN) = @PC(BGDGGEXPCAPTCN) + C(1)*DUMH

	'USD CONVERSION
		BGD.append @IDENTITY BGDNEEXPGNFSCD = BGDNEEXPGNFSCN / BGDPANUSATLS
		BGD.append @IDENTITY BGDNEIMPGNFSCD = BGDNEIMPGNFSCN / BGDPANUSATLS

		BGD.append @IDENTITY BGDNEEXPGNFSKD = (BGDNEEXPGNFSKN * (@ELEM(BGDNEEXPGNFSCN , 2015) / (@ELEM(BGDNEEXPGNFSKN , 2015)))) / @ELEM(BGDPANUSATLS , 2015)
		BGD.append @IDENTITY BGDNEIMPGNFSKD = (BGDNEIMPGNFSKN * (@ELEM(BGDNEIMPGNFSCN , 2015) / (@ELEM(BGDNEIMPGNFSKN , 2015)))) / @ELEM(BGDPANUSATLS , 2015)

		BGD.append @IDENTITY BGDNEEXPGNFSXD = (BGDNEEXPGNFSCD / BGDNEEXPGNFSKD)
		BGD.append @IDENTITY BGDNEIMPGNFSXD = (BGDNEIMPGNFSCD / BGDNEIMPGNFSKD)

		BGD.append @IDENTITY BGDNYGDPMKTPCD = BGDNYGDPMKTPcn / BGDPANUSATLS
		BGD.append @IDENTITY BGDNYGDPMKTPKD = (BGDNYGDPMKTPKN * (@ELEM(BGDNYGDPMKTPCN , 2015) / (@ELEM(BGDNYGDPMKTPKN , 2015)))) / @ELEM(BGDPANUSATLS , 2015)
		BGD.append @IDENTITY BGDNYGDPMKTPXD = (BGDNYGDPMKTPCD / BGDNYGDPMKTPKD)

'*******************************************************
' NIA-Production
'*******************************************************
	'VOLUMES
		BGD.append @IDENTITY BGDNYGDPFCSTKN = BGDNYGDPMKTPKN - BGDNYTAXNINDKN
		
		'BGD.append @IDENTITY BGDNVSRVTOTLKN = BGDNYGDPFCSTKN - BGDNVAGRTOTLKN - BGDNVINDTOTLKN
		
		'BGD.append @IDENTITY BGDNVAGRFISHKN = BGDNVAGRTOTLKN - (BGDNVAGRCROPKN + BGDNVAGRFARMKN + BGDNVAGRFRSTKN)
		'BGD.append @IDENTITY BGDNVINDCONSKN = BGDNVINDTOTLKN - (BGDNVINDMINQKN + BGDNVINDLSCLKN + BGDNVINDSSCLKN + BGDNVINDELECKN)
		'BGD.append @IDENTITY BGDNVSRVSOCLKN = BGDNVSRVTOTLKN - (BGDNVSRVRETLKN + BGDNVSRVHOTLKN + BGDNVSRVTRNSKN + BGDNVSRVFINAKN + BGDNVSRVBUSIKN + BGDNVSRVPADMKN + BGDNVSRVEDUCKN + BGDNVSRVHLTHKN)
		
		smpl %begin_date %end_estimate
			c = 0
		'equation _BGDNVAGRTOTLKN.LS DLOG(BGDNVAGRTOTLKN) = C(1) - C(2) * (LOG(BGDNVAGRTOTLKN(-1))-LOG(BGDNECONPRVTKN(-1)+BGDNECONGOVTKN(-1)+BGDNEGDIFTOTKN(-1))) + C(3) * DLOG(BGDNECONPRVTKN+BGDNECONGOVTKN+BGDNEGDIFTOTKN) + (1-C(3)) * DLOG(BGDNVAGRTOTLKN(-1)) + C(10) * T_LR
		
		smpl %begin_date %end_estimate
			c = 0
		'equation _BGDNVINDTOTLKN.LS(OPTMETHOD=LEGACY) DLOG(BGDNVINDTOTLKN) = C(1) - C(2) * (LOG(BGDNVINDTOTLKN(-1))-LOG(BGDNECONPRVTKN(-1)+BGDNECONGOVTKN(-1)+BGDNEGDIFTOTKN(-1)+BGDNEEXPGNFSKN(-1))) + C(3) * DLOG(BGDNECONPRVTKN+BGDNECONGOVTKN+BGDNEGDIFTOTKN+BGDNEEXPGNFSKN) + (1-C(3)) * DLOG(BGDNVINDTOTLKN(-1)) + C(10) * T_LR
		
		'for %var AGRCROP AGRFARM AGRFRST INDMINQ INDLSCL INDSSCL INDELEC SRVRETL SRVHOTL SRVTRNS SRVFINA SRVBUSI SRVPADM SRVEDUC SRVHLTH
		'	smpl %begin_date %end_estimate
		'		c = 0
		'	equation _BGDNV{%var}KN.LS(OPTMETHOD=LEGACY) DLOG(BGDNV{%var}KN) = C(1) - (0.1 + 0.7 * @LOGIT(C(2))) * (LOG(BGDNV{%var}KN(-1))-LOG(BGDNECONPRVTKN(-1)+BGDNECONGOVTKN(-1)+BGDNEGDIFTOTKN(-1)+BGDNEEXPGNFSKN(-1))) + @LOGIT(C(3)) * DLOG(BGDNECONPRVTKN+BGDNECONGOVTKN+BGDNEGDIFTOTKN+BGDNEEXPGNFSKN) + (1-@LOGIT(C(3))) * DLOG(BGDNV{%var}KN(-1)) + C(10) * T_LR		
		'next
		
	'PRICES	
		'BGD.append @IDENTITY BGDNVSRVTOTLXN = BGDNVSRVTOTLCN / BGDNVSRVTOTLKN
		
		'BGD.append @IDENTITY BGDNVAGRFISHXN = BGDNVAGRFISHCN / BGDNVAGRFISHKN
		'BGD.append @IDENTITY BGDNVINDCONSXN = BGDNVINDCONSCN / BGDNVINDCONSKN
		'BGD.append @IDENTITY BGDNVSRVSOCLXN = BGDNVSRVSOCLCN / BGDNVSRVSOCLKN
		
		'AGRICULTURE
			smpl %begin_date %end_estimate
				c = 0
			'equation _BGDNVAGRTOTLXN.LS(OPTMETHOD=LEGACY) DLOG(BGDNVAGRTOTLXN) = C(1) - C(2) * (LOG(BGDNVAGRTOTLXN(-1))-LOG(BGDNECONPRVTXN(-1))) + C(3) * DLOG(BGDNECONPRVTXN) + (1-C(3)) * DLOG(BGDNVAGRTOTLXN(-1))
			
			smpl 1995 %end_estimate
				c = 0
			'equation _BGDNVAGRCROPXN.LS DLOG(BGDNVAGRCROPXN) = C(1) - C(2)* (LOG(BGDNVAGRCROPXN(-1))-LOG(BGDNECONPRVTXN(-1))) + C(3) * DLOG(BGDNECONPRVTXN) + C(10) * (@DURING("1993")-@DURING("1995"))
			
			smpl %begin_date %end_estimate
				c = 0
			'equation _BGDNVAGRFARMXN.LS(OPTMETHOD=LEGACY) DLOG(BGDNVAGRFARMXN) = C(1) - C(2) * (LOG(BGDNVAGRFARMXN(-1))-LOG(BGDNECONPRVTXN(-1))) + C(3) * DLOG(BGDNECONPRVTXN) + (1-C(3)) * DLOG(BGDNVAGRFARMXN(-1))
			
			smpl 1992 %end_estimate
				c = 0
			'equation _BGDNVAGRFRSTXN.LS DLOG(BGDNVAGRFRSTXN) = C(1) - C(2) * (LOG(BGDNVAGRFRSTXN(-1))-LOG(BGDNECONPRVTXN(-1))) + C(3) * DLOG(BGDNECONPRVTXN) + (1-C(3)) * DLOG(BGDNVAGRFRSTXN(-1))
			
		'INDUSTRY
			smpl %begin_date %end_estimate
				c = 0
			'equation _BGDNVINDTOTLXN.LS(OPTMETHOD=LEGACY) DLOG(BGDNVINDTOTLXN) = C(1) - C(2) * (LOG(BGDNVINDTOTLXN(-1))-LOG(BGDNECONPRVTXN(-1))) + C(3) * DLOG(BGDNECONPRVTXN) + (1-C(3)) * DLOG(BGDNVINDTOTLXN(-1))
			
			smpl %begin_date %end_estimate
				c = 0
			'equation _BGDNVINDMINQXN.LS(OPTMETHOD=LEGACY) DLOG(BGDNVINDMINQXN) = C(1) - C(2) * (LOG(BGDNVINDMINQXN(-1))-LOG(BGDNECONPRVTXN(-1))) + C(3) * DLOG(BGDNECONPRVTXN) + (1-C(3)) * DLOG(BGDNVINDMINQXN(-1))
			
			smpl %begin_date %end_estimate
				c = 0
			'equation _BGDNVINDLSCLXN.LS(OPTMETHOD=LEGACY) DLOG(BGDNVINDLSCLXN) = C(1) - C(2) * (LOG(BGDNVINDLSCLXN(-1))-LOG(BGDNECONPRVTXN(-1))) + C(3) * DLOG(BGDNECONPRVTXN) + (1-C(3)) * DLOG(BGDNVINDLSCLXN(-1))
			
			smpl %begin_date %end_estimate
				c = 0
			'equation _BGDNVINDSSCLXN.LS(OPTMETHOD=LEGACY) DLOG(BGDNVINDSSCLXN) = C(1) - C(2) * (LOG(BGDNVINDSSCLXN(-1))-LOG(BGDNECONPRVTXN(-1))) + C(3) * DLOG(BGDNECONPRVTXN) + (1-C(3)) * DLOG(BGDNVINDSSCLXN(-1))
			
			smpl %begin_date %end_estimate
				c = 0
			'equation _BGDNVINDELECXN.LS(OPTMETHOD=LEGACY) DLOG(BGDNVINDELECXN) = C(1) - C(2) * (LOG(BGDNVINDELECXN(-1))-LOG(BGDNECONPRVTXN(-1))) + C(3) * DLOG(BGDNECONPRVTXN) + (1-C(3)) * DLOG(BGDNVINDELECXN(-1))
			
		'SERVICES
			smpl %begin_date %end_estimate
				c = 0
			'equation _BGDNVSRVRETLXN.LS(OPTMETHOD=LEGACY) DLOG(BGDNVSRVRETLXN) = C(1) - C(2) * (LOG(BGDNVSRVRETLXN(-1))-LOG(BGDNECONPRVTXN(-1))) + C(3) * DLOG(BGDNECONPRVTXN) + (1-C(3)) * DLOG(BGDNVSRVRETLXN(-1))
			
			smpl 1990 %end_estimate
				c = 0
			'equation _BGDNVSRVHOTLXN.LS(OPTMETHOD=LEGACY) DLOG(BGDNVSRVHOTLXN) = C(1) - C(2) * (LOG(BGDNVSRVHOTLXN(-1))-LOG(BGDNECONPRVTXN(-1))) + C(3) * DLOG(BGDNECONPRVTXN) + (1-C(3)) * DLOG(BGDNVSRVHOTLXN(-1))
			
			smpl 1990 %end_estimate
				c = 0
			'equation _BGDNVSRVTRNSXN.LS(OPTMETHOD=LEGACY) DLOG(BGDNVSRVTRNSXN) = C(1) - C(2) * (LOG(BGDNVSRVTRNSXN(-1))-LOG(BGDNECONPRVTXN(-1))) + C(3) * DLOG(BGDNECONPRVTXN) + (1-C(3)) * DLOG(BGDNVSRVTRNSXN(-1))
			
			smpl 1990 %end_estimate
				c = 0
			'equation _BGDNVSRVFINAXN.LS(OPTMETHOD=LEGACY) DLOG(BGDNVSRVFINAXN) = C(1) - C(2) * (LOG(BGDNVSRVFINAXN(-1))-LOG(BGDNECONPRVTXN(-1))) + C(3) * DLOG(BGDNECONPRVTXN) + (1-C(3)) * DLOG(BGDNVSRVFINAXN(-1))
 
			smpl %begin_date %end_estimate
				c = 0
			'equation _BGDNVSRVBUSIXN.LS(OPTMETHOD=LEGACY) DLOG(BGDNVSRVBUSIXN) = C(1) - C(2) * (LOG(BGDNVSRVBUSIXN(-1))-LOG(BGDNECONPRVTXN(-1))) + C(3) * DLOG(BGDNECONPRVTXN) + (1-C(3)) * DLOG(BGDNVSRVBUSIXN(-1))
			
			smpl %begin_date %end_estimate
				c = 0
			'equation _BGDNVSRVPADMXN.LS(OPTMETHOD=LEGACY) DLOG(BGDNVSRVPADMXN) = C(1) - C(2) * (LOG(BGDNVSRVPADMXN(-1))-LOG(BGDNECONPRVTXN(-1))) + C(3) * DLOG(BGDNECONPRVTXN) + (1-C(3)) * DLOG(BGDNVSRVPADMXN(-1))
			
			smpl %begin_date %end_estimate
				c = 0
			'equation _BGDNVSRVEDUCXN.LS(OPTMETHOD=LEGACY) DLOG(BGDNVSRVEDUCXN) = C(1) - C(2) * (LOG(BGDNVSRVEDUCXN(-1))-LOG(BGDNECONPRVTXN(-1))) + C(3) * DLOG(BGDNECONPRVTXN) + (1-C(3)) * DLOG(BGDNVSRVEDUCXN(-1))
			
			smpl %begin_date %end_estimate
				c = 0
			'equation _BGDNVSRVHLTHXN.LS(OPTMETHOD=LEGACY) DLOG(BGDNVSRVHLTHXN) = C(1) - C(2) * (LOG(BGDNVSRVHLTHXN(-1))-LOG(BGDNECONPRVTXN(-1))) + C(3) * DLOG(BGDNECONPRVTXN) + (1-C(3)) * DLOG(BGDNVSRVHLTHXN(-1))

	'VALUES
		BGD.append @IDENTITY BGDNYGDPFCSTCN = BGDNYGDPFCSTXN * BGDNYGDPFCSTKN
		BGD.append @IDENTITY BGDNYTAXNINDCN = BGDNYGDPMKTPCN - BGDNYGDPFCSTCN
		
		'for %var AGRTOTL INDTOTL AGRCROP AGRFARM AGRFRST INDMINQ INDLSCL INDSSCL INDELEC SRVRETL SRVHOTL SRVTRNS SRVFINA SRVBUSI SRVPADM SRVEDUC SRVHLTH 
		'	BGD.append @IDENTITY BGDNV{%var}CN = BGDNV{%var}KN * BGDNV{%var}XN
		'next
		
		'BGD.append @IDENTITY BGDNVSRVTOTLCN = BGDNYGDPFCSTCN - BGDNVAGRTOTLCN - BGDNVINDTOTLCN
		
		'BGD.append @IDENTITY BGDNVAGRFISHCN = BGDNVAGRTOTLCN - (BGDNVAGRCROPCN + BGDNVAGRFARMCN + BGDNVAGRFRSTCN)
		'BGD.append @IDENTITY BGDNVINDCONSCN = BGDNVINDTOTLCN - (BGDNVINDMINQCN + BGDNVINDLSCLCN + BGDNVINDSSCLCN + BGDNVINDELECCN)
		'BGD.append @IDENTITY BGDNVSRVSOCLCN = BGDNVSRVTOTLCN - (BGDNVSRVRETLCN + BGDNVSRVHOTLCN + BGDNVSRVTRNSCN + BGDNVSRVFINACN + BGDNVSRVBUSICN + BGDNVSRVPADMCN + BGDNVSRVEDUCCN + BGDNVSRVHLTHCN)

'*******************************************************
' EXTERNAL
'*******************************************************
	'EXCHANGE RATES
		smpl %begin_date %end_estimate
			c = 0
		'equation _BGDPANUSATLS.LS LOG(BGDPANUSATLS) = C(1) + LOG(BGDPANUSATLS(-1)) + LOG((1+USAINTRFR/100)/(1+BGDFMLBLPOLYFR/100))
		'equation _BGDPANUSATLS.ls LOG(BGDPANUSATLS) = C(1) 
		''equation _BGDPANUSATLS.ls DLOG(BGDPANUSATLS) = C(1) -((0.4)*@LOGIT(C(2))+0.1)*(LOG(BGDPANUSATLS(-1))-LOG((1+USAINTRFR(-1)/100)/(1+BGDFMLBLPOLYFR(-1)/100)))+((0.7)*@LOGIT(C(3))+0.1)*DLOG(BGDPANUSATLS(-1))+1*DLOG((1+USAINTRFR/100)/(1+BGDFMLBLPOLYFR/100))+c(10)*@during("2003")
		
		equation _BGDPANUSATLS.ls DLOG(BGDPANUSATLS) = C(1) -0.2*(LOG(BGDPANUSATLS(-1))-LOG((1+USAINTRFR(-1)/100)/(1+BGDFMLBLPOLYFR(-1)/100)))+0.15*DLOG(BGDPANUSATLS(-1))+1*DLOG((1+USAINTRFR/100)/(1+BGDFMLBLPOLYFR/100))+C(10)*@DURING("2012")
		
		for %c BGD USA DEU GBR FRA CHN ESP CAN ITA TUR NLD BEL IND
			BGD.append @IDENTITY {%c}EXR05 = {%c}panusatls / @elem({%c}panusatls , 2015)
			BGD.append @IDENTITY {%c}PCEXN05 = {%c}neconprvtxn / @elem({%c}neconprvtxn , 2015)
		next
		
		BGD.append @IDENTITY BGDreer  = 100  * (0.1976357385 * 1 / ((BGDEXR05 / BGDPCEXN05) / (USAEXR05 / USAPCEXN05))  + 0.1462581536 * 1 / ((BGDEXR05 / BGDPCEXN05) / (DEUEXR05 / DEUPCEXN05))  + 0.08439290517 * 1 / ((BGDEXR05 / BGDPCEXN05) / (GBREXR05 / GBRPCEXN05))  + 0.06887154717 * 1 / ((BGDEXR05 / BGDPCEXN05) / (FRAEXR05 / FRAPCEXN05))  + 0.04927114879 * 1 / ((BGDEXR05 / BGDPCEXN05) / (CHNEXR05 / CHNPCEXN05))  + 0.04496640064 * 1 / ((BGDEXR05 / BGDPCEXN05) / (ESPEXR05 / ESPPCEXN05))  + 0.03717605296 * 1 / ((BGDEXR05 / BGDPCEXN05) / (CANEXR05 / CANPCEXN05))  + 0.03359022571 * 1 / ((BGDEXR05 / BGDPCEXN05) / (ITAEXR05 / ITAPCEXN05))  + 0.03241757735 * 1 / ((BGDEXR05 / BGDPCEXN05) / (TUREXR05 / TURPCEXN05))  + 0.02752241922 * 1 / ((BGDEXR05 / BGDPCEXN05) / (NLDEXR05 / NLDPCEXN05))  + 0.0260141169 * 1 / ((BGDEXR05 / BGDPCEXN05) / (BELEXR05 / BELPCEXN05))  + 0.02484860441 * 1 / ((BGDEXR05 / BGDPCEXN05) / (INDEXR05 / INDPCEXN05))) / (1-0.22703511)

		BGD.append @IDENTITY BGDneer  = 100  * (0.1976357385 * 1 / (BGDEXR05 / USAEXR05)  + 0.1462581536 * 1 / (BGDEXR05 / DEUEXR05)  + 0.08439290517 * 1 / (BGDEXR05 / GBREXR05)  + 0.06887154717 * 1 / (BGDEXR05 / FRAEXR05)  + 0.04927114879 * 1 / (BGDEXR05 / CHNEXR05)  + 0.04496640064 * 1 / (BGDEXR05 / ESPEXR05)  + 0.03717605296 * 1 / (BGDEXR05 / CANEXR05)  + 0.03359022571 * 1 / (BGDEXR05 / ITAEXR05)  + 0.03241757735 * 1 / (BGDEXR05 / TUREXR05)  + 0.02752241922 * 1 / (BGDEXR05 / NLDEXR05)  + 0.0260141169 * 1 / (BGDEXR05 / BELEXR05)  + 0.02484860441 * 1 / (BGDEXR05 / INDEXR05)) / (1-0.22703511)
		
	'KEYFITZ
		BGD.append @IDENTITY BGDpxkey  = MUV / @ELEM(MUV , 2015)

		BGD.append @IDENTITY BGDpmkey  = ( 0.002452542217  * WLDFALUMINUM  / @ELEM(WLDFALUMINUM  , 2015)  + 0.000027200099  * WLDFBANANA_US  / @ELEM(WLDFBANANA_US  , 2015)  + 0.003404545665  * WLDFBEEF  / @ELEM(WLDFBEEF  , 2015)  + 0.247806497590  * WLDFCOAL_AUS  / @ELEM(WLDFCOAL_AUS  , 2015)  + 0.000497856374  * WLDFCOCOA  / @ELEM(WLDFCOCOA  , 2015)  + 0.000380801379  * WLDFCOFFEE_COMPO  / @ELEM(WLDFCOFFEE_COMPO  , 2015)  + 0.000013600049  * WLDFCOPPER  / @ELEM(WLDFCOPPER  , 2015)  + 3.512983391193  * WLDFCOTTON_A_INDX  / @ELEM(WLDFCOTTON_A_INDX  , 2015)  + 0.000376692145  * WLDFCRUDE_PETRO  / @ELEM(WLDFCRUDE_PETRO  , 2015)  + 0.000026202967  * WLDFGRNUT_OIL  / @ELEM(WLDFGRNUT_OIL  , 2015)  + 0.000412534828  * WLDFGRNUT_OIL  / @ELEM(WLDFGRNUT_OIL  , 2015)  + 0.001156004187  * WLDFGOLD  / @ELEM(WLDFGOLD  , 2015)  + 0.000072533596  * WLDFGRNUT  / @ELEM(WLDFGRNUT  , 2015)  + 0.000009066700  * WLDFIRON_ORE  / @ELEM(WLDFIRON_ORE  , 2015)  + 0.010453207011  * WLDFLEAD  / @ELEM(WLDFLEAD  , 2015)  + 0.708186298485  * WLDFMAIZE  / @ELEM(WLDFMAIZE  , 2015)  + 79.964617643237  * MUV  / @ELEM(MUV  , 2015)  + 0.000213458882  * WLDFNICKEL  / @ELEM(WLDFNICKEL  , 2015)  + 0.205605544733  * WLDFORANGE  / @ELEM(WLDFORANGE  , 2015)  + 0.097435286258  * WLDFNGAS_EUR  / @ELEM(WLDFNGAS_EUR  , 2015)  + 0.064586633942  * WLDFPALM_OIL  / @ELEM(WLDFPALM_OIL  , 2015)  + 1.455917006872  * WLDFRICE_05  / @ELEM(WLDFRICE_05  , 2015)  + 0.025930760592  * WLDFRUBBER1_MYSG  / @ELEM(WLDFRUBBER1_MYSG  , 2015)  + 0.000285601034  * WLDFSILVER  / @ELEM(WLDFSILVER  , 2015)  + 1.293541485392  * WLDFSOYBEAN_MEAL  / @ELEM(WLDFSOYBEAN_MEAL  , 2015)  + 0.822399512182  * WLDFSOYBEAN_OIL  / @ELEM(WLDFSOYBEAN_OIL  , 2015)  + 0.207065283353  * WLDFSOYBEANS  / @ELEM(WLDFSOYBEANS  , 2015)  + 0.000235734187  * WLDFSORGHUM  / @ELEM(WLDFSORGHUM  , 2015)  + 5.530605099306  * WLDFISTL_JP_INDX  / @ELEM(WLDFISTL_JP_INDX  , 2015)  + 2.081016071070  * WLDFSUGAR_WLD  / @ELEM(WLDFSUGAR_WLD  , 2015)  + 0.019806205074  * WLDFTEA_AVG  / @ELEM(WLDFTEA_AVG  , 2015)  + 0.043860158868  * WLDFTOBAC_US  / @ELEM(WLDFTOBAC_US  , 2015)  + 0.000022666749  * WLDFLOGS_MYS  / @ELEM(WLDFLOGS_MYS  , 2015)  + 0.044154826602  * WLDFPLYWOOD  / @ELEM(WLDFPLYWOOD  , 2015)  + 0.001310148353  * WLDFWOODPULP  / @ELEM(WLDFWOODPULP  , 2015)  + 0.250716908132  * WLDFSAWNWD_MYS  / @ELEM(WLDFSAWNWD_MYS  , 2015)  + 3.402414990698  * WLDFWHEAT_US_HRW  / @ELEM(WLDFWHEAT_US_HRW  , 2015) )  / 100
		
		BGD.append @IDENTITY BGDtot = (BGDNEexpgnfsxn / BGDNEimpgnfsxn)
		
	'EXPORT MARKET
		BGD.append @IDENTITY BGDxmkt_gr  = 0.1976357385 * @pc(USAneimpgnfskd) + 0.1462581536 * @pc(DEUneimpgnfskd) + 0.08439290517 * @pc(GBRneimpgnfskd) + 0.06887154717 * @pc(FRAneimpgnfskd) + 0.04927114879 * @pc(CHNneimpgnfskd) + 0.04496640064 * @pc(ESPneimpgnfskd) + 0.03717605296 * @pc(CANneimpgnfskd) + 0.03359022571 * @pc(ITAneimpgnfskd) + 0.03241757735 * @pc(TURneimpgnfskd) + 0.02752241922 * @pc(NLDneimpgnfskd) + 0.0260141169 * @pc(BELneimpgnfskd) + 0.02484860441 * @pc(INDneimpgnfskd) + 0.22703511 * @pc(ROWNEIMPGNFSKD)
		
		BGD.append @IDENTITY BGDXMKT = BGDXMKT(-1) * (1 + BGDXMKT_GR / 100)
	
'*******************************************************
' FISCAL
'*******************************************************
	'REVENUES
		'BGD.append @IDENTITY BGDGGREVTOTLCN = BGDGGREVTAXTCN + BGDGGREVNONTCN + BGDGGREVGRNTCN + BGDGGREVOTHRCN
	
		'TAX REVENUES
			BGD.append @IDENTITY BGDGGREVTAXTCN = BGDGGREVIMPDCN + BGDGGREVEXPDCN + BGDGGREVTVATCN + BGDGGREVDRCTCN + BGDGGREVEXCDCN + BGDGGREVSUPDCN + BGDGGREVOTHDCN + BGDGGREVNNBRCN + BGDGGREVTOTHCN

			' Import duty
				BGD.append @IDENTITY BGDGGREVIMPDCN = BGDGGREVIMPDER / 100 * BGDNEIMPGNFSCN 

			' Export duty
				BGD.append @IDENTITY BGDGGREVEXPDCN = BGDGGREVEXPDER / 100 * BGDNEEXPGNFSCN 
			
			' VAT
				BGD.append @IDENTITY BGDGGREVTVATCN = BGDGGREVTVATER / 100 * (BGDNECONPRVTCN + BGDNECONGOVTCN) 
			
			' Excise duties
				BGD.append @IDENTITY BGDGGREVEXCDCN = BGDGGREVEXCDER / 100 * (BGDNECONPRVTCN + BGDNECONGOVTCN) 

			' Direct Tax
				BGD.append @IDENTITY BGDGGREVDRCTCN = BGDGGREVDRCTER / 100 * BGDNYGDPMKTPCN
			
			' Supplementary duties
				BGD.append @IDENTITY BGDGGREVSUPDCN = BGDGGREVSUPDER / 100 * (BGDNECONPRVTCN + BGDNECONGOVTCN) 
			
			' Other taxes and duties
				BGD.append @IDENTITY BGDGGREVOTHDCN = BGDGGREVOTHDER / 100 * BGDNYGDPMKTPCN
			
			' Non-NBR taxes
				BGD.append @IDENTITY BGDGGREVNNBRCN = BGDGGREVNNBRER / 100 * BGDNYGDPMKTPCN
			
			' All Other Taxes
				BGD.append @IDENTITY BGDGGREVTOTHCN = BGDGGREVTOTHER / 100 * BGDNYGDPMKTPCN
	
		'NON TAX REVENUES
			smpl %begin_date %end_estimate
				c = 0
			equation _BGDGGREVNONTCN.LS (BGDGGREVNONTCN/BGDNYGDPMKTPCN) = C(1)
		
		'GRANTS
			smpl %begin_date %end_estimate
				c = 0
			equation _BGDGGREVGRNTCN.LS (BGDGGREVGRNTCN/BGDNYGDPMKTPCN) = C(1)
			
		'OTHER REVENUES
			'Exogenous variables : BGDGGREVOTHRCN
			
	'EXPENDITURES
		' BGD.append @IDENTITY BGDGGEXPTOTLCN = BGDGGEXPCRNTCN + BGDGGEXPCAPTCN + BGDGGEXPOTHRCN
		
		'CURRENT EXPENDITURES
		BGD.append @IDENTITY BGDGGEXPCRNTCN = BGDGGEXPWAGECN + BGDGGEXPINTPCN + BGDGGEXPGNFSCN + BGDGGEXPTRNSCN
	
		if !fiscRule = 1 then

		'WAGE
			smpl %begin_date %end_estimate
				c = 0
			equation _BGDGGEXPWAGECN.LS (BGDGGEXPWAGECN/(BGDGGREVTOTLCN-BGDGGEXPINTPCN(-1))) = C(1)
			

		'GOODS and SERVICES
			smpl %begin_date %end_estimate
				c = 0		
			equation _BGDGGEXPGNFSCN.LS (BGDGGEXPGNFSCN/(BGDGGREVTOTLCN-BGDGGEXPINTPCN(-1))) = C(1)

		'TRANSFERS
			smpl %begin_date %end_estimate
				c = 0		
			equation _BGDGGEXPTRNSCN.LS (BGDGGEXPTRNSCN/(BGDGGREVTOTLCN-BGDGGEXPINTPCN(-1))) = C(1)
			
		'OTHER EXPENDITURES
			'Exogenous variables : BGDGGEXPOTHRCN
			
		'CAPITAL EXPENDITURES
			' smpl %begin_date %end_estimate
			smpl 1992 %end_estimate
				c = 0
			equation _BGDGGEXPCAPTCN.LS (BGDGGEXPCAPTCN/(BGDGGREVTOTLCN-BGDGGEXPINTPCN(-1))) = C(1)
		
			else
		'WAGE
			smpl %begin_date %end_estimate
				c = 0
			equation _BGDGGEXPWAGECN.LS DLOG(BGDGGEXPWAGECN) = C(1) - C(2) * (LOG(BGDGGEXPWAGECN(-1)) - LOG(BGDNYGDPMKTPCN(-1))) + C(3) * DLOG(BGDGGEXPGNFSCN(-1)) + (1 - C(3))* DLOG(BGDNYGDPMKTPCN)
			

		'GOODS and SERVICES
			smpl %begin_date %end_estimate
				c = 0		
			equation _BGDGGEXPGNFSCN.LS DLOG(BGDGGEXPGNFSCN) = C(1) - C(2) * (LOG(BGDGGEXPGNFSCN(-1)) - LOG(BGDNYGDPMKTPCN(-1))) + C(3) * DLOG(BGDGGEXPGNFSCN(-1)) + (1 - C(3))* DLOG(BGDNYGDPMKTPCN) + C(10) * @DURING("1999")

		'TRANSFERS
			smpl %begin_date %end_estimate
				c = 0		
			equation _BGDGGEXPTRNSCN.LS @PC(BGDGGEXPTRNSCN) = @PC(BGDNYGDPMKTPCN) + C(1) * @DURING("2015")
			
		'OTHER EXPENDITURES
			'Exogenous variables : BGDGGEXPOTHRCN
			
		'CAPITAL EXPENDITURES
			' smpl %begin_date %end_estimate
			smpl 1992 %end_estimate
				c = 0
			equation _BGDGGEXPCAPTCN.LS DLOG(BGDGGEXPCAPTCN) = C(1) - C(2) * (LOG(BGDGGEXPCAPTCN(-1)) - LOG(BGDNYGDPMKTPCN(-1))) + C(3) * DLOG(BGDGGEXPCAPTCN(-1)) + (1 - C(3))* DLOG(BGDNYGDPMKTPCN)
		endif
		
		'INTEREST PAYMENTS	
			BGD.append @IDENTITY BGDGGEXPINTPCN = BGDGGEXPINTDCN + BGDGGEXPINTECN
		
			BGD.append @IDENTITY BGDGGEXPINTDCN = BGDINTRDFR / 100 * BGDGGDBTDOMTCN(-1)
			BGD.append @IDENTITY BGDGGEXPINTECN = BGDINTREFR / 100 * BGDGGDBTEXTLCN(-1)
			
			BGD.append @IDENTITY BGDINTRDFR = BGDINTRDDIFFFR + BGDFMLBLPOLYFR 
			BGD.append @IDENTITY BGDINTREFR = BGDINTREDIFFFR + USAINTRFR
			
			'Exogenous variables : BGDINTRDDIFFFR BGDINTREDIFFFR			
			
	'BALANCE
		BGD.append @IDENTITY BGDGGBALOVRLCN = BGDGGREVTOTLCN - BGDGGEXPTOTLCN
		BGD.append @IDENTITY BGDGGBALPRIMCN = BGDGGBALOVRLCN + BGDGGEXPINTPCN
		
		BGD.append @IDENTITY BGDGGBALOVRLCD = BGDGGBALOVRLCN / BGDPANUSATLS 
		
	'DEBT	
		BGD.append @IDENTITY BGDGGDBTTOTLCN = BGDGGDBTEXTLCN + BGDGGDBTDOMTCN
		BGD.append @IDENTITY BGDGGDBTTOTLCD = BGDGGDBTTOTLCN / BGDPANUSATLS
		
		BGD.append @IDENTITY BGDGGDBTEXTLCN = BGDGGDBTEXTLCN(-1) + BGDGGDBTVALECN + BGDGGFINEXTLCN 
		BGD.append @IDENTITY BGDGGDBTDOMTCN = BGDGGDBTDOMTCN(-1) + BGDGGDBTVALDCN + BGDGGFINDOMTCN 
	
		'Exogenous variables : BGDGGDBTVALECN BGDGGDBTVALDCN
	
	'FINANCING
	
		BGD.append @IDENTITY BGDGGFINREQMCN = - BGDGGBALOVRLCN
		BGD.append @IDENTITY BGDGGFINFGAPCN = BGDGGFINREQMCN - BGDGGFINTOTLCN 

		BGD.append @IDENTITY BGDGGFINTOTLCN = BGDGGFINEXTLCN + BGDGGFINDOMTCN
		
		' Foreign
			equation _BGDGGFINEXTLCN.LS BGDGGFINEXTLCN = BGDGGFINEXTLSHARE_/100 * BGDGGFINREQMCN + C(1) * @DURING("2015")
			
			BGD.append @IDENTITY BGDGGFINEOTHCN = BGDGGFINEXTLCN + BGDGGFINEAMTCN - BGDGGFINEDSBCN
		
		' Domestic 
			equation _BGDGGFINDOMTCN.LS BGDGGFINDOMTCN = (1-BGDGGFINEXTLSHARE_/100) * BGDGGFINREQMCN + C(1) * @DURING("2015")
		
'*******************************************************
' MONETARY
'*******************************************************
	smpl %begin_date %end_estimate
		c = 0
	equation _BGDFMLBLPOLYFR.LS(OPTMETHOD=LEGACY) BGDFMLBLPOLYFR/100 = C(1) * BGDFMLBLPOLYFR(-1)/100 + (1-C(1)) * (C(2) + 1.5*(@PC(BGDFPCPITOTLXN) - BGDINFLEXPT)/100 + 0.3 * BGDNYGDPGAP_/100)'+C(10)*@DURING("2010")


'*******************************************************
' BOP
'*******************************************************
	'CURRENT ACCOUNT
		'TRADE			
			'EXPORTS
				smpl %begin_date %end_estimate
					c = 0
				equation _BGDBXGSRGNFSCD.LS(OPTMETHOD=LEGACY) DLOG(BGDBXGSRGNFSCD) = DLOG((BGDNEEXPGNFSKN*BGDNEEXPGNFSXN)/BGDPANUSATLS) + C(1)*DUMH
				
				smpl %begin_date %end_estimate
					c = 0
				equation _BGDBXGSRMRCHCD.LS (BGDBXGSRMRCHCD/BGDBXGSRGNFSCD) = C(1)

				
				BGD.append @IDENTITY BGDBXGSRNFSVCD = BGDBXGSRGNFSCD - BGDBXGSRMRCHCD
	
			'IMPORTS
				smpl %begin_date %end_estimate
					c = 0
				equation _BGDBMGSRGNFSCD.LS(OPTMETHOD=LEGACY) DLOG(BGDBMGSRGNFSCD) = DLOG((BGDNEIMPGNFSKN*BGDNEIMPGNFSXN)/BGDPANUSATLS)  +C(1)*DUMH
				
				smpl %begin_date %end_estimate
					c = 0
				' equation _BGDBMGSRMRCHCD.LS DLOG(BGDBMGSRMRCHCD) = C(1) + C(2)*DLOG(BGDNEGDETTOTCN/BGDPANUSATLS)
				equation _BGDBMGSRMRCHCD.LS DLOG(BGDBMGSRMRCHCD/BGDBMGSRGNFSCD) = C(1) 
				
				BGD.append @IDENTITY BGDBMGSRNFSVCD = BGDBMGSRGNFSCD - BGDBMGSRMRCHCD
				
		'PRIMARY AND SECONDARY INCOME
			BGD.append @identity BGDBNFSTCABTCD = BGDBXFSTCABTCD - BGDBMFSTCABTCD
			
			BGD.append @identity BGDBXFSTCABTCD = BGDBXFSTREMTCD + BGDBXFSTOTHRCD
			
			' smpl %begin_date %end_estimate
			smpl 2000 %end_estimate
				c = 0
			equation _BGDBXFSTREMTCD.LS DLOG(BGDBXFSTREMTCD) = C(1) - C(2) * (LOG(BGDBXFSTREMTCD(-1))-LOG(BGDREMT_IN(-1))) + C(3) * DLOG(BGDREMT_IN) + C(10) * @DURING("2007 2008")
			
			smpl %begin_date %end_estimate
				c = 0
			equation _BGDBXFSTOTHRCD.LS (BGDBXFSTOTHRCD/BGDNYGDPMKTPCD) =  C(1) 
			
			' smpl %begin_date %end_estimate
			smpl 1995 %end_estimate
				c = 0
			equation _BGDBMFSTREMTCD.LS DLOG(BGDBMFSTREMTCD) = C(1) - C(2) * (LOG(BGDBMFSTREMTCD(-1))-LOG(BGDNYGDPMKTPCD(-1))) + C(3) * DLOG(BGDNYGDPMKTPCD) + C(10) * @DURING("2013")
			
			BGD.append @IDENTITY BGDREMT_IN_GR  = (0.5051202849 * @pc(INDnygdpmktpcd) + 0.2345741681 * @pc(SAUnygdpmktpcd) + 0.04365722396 * @pc(KWTnygdpmktpcd) + 0.03747056485 * @pc(GBRnygdpmktpcd) + 0.03191225175 * @pc(USAnygdpmktpcd) + 0.02910502448 * @pc(PAKnygdpmktpcd) + 0.02319375545 * @pc(OMNnygdpmktpcd) + 0.02142444069 * @pc(QATnygdpmktpcd) + 0.01919426588 * @pc(MYSnygdpmktpcd) + 0.01281306659 * @pc(ITAnygdpmktpcd)) / (1-0.041534953)
			
			BGD.append @identity BGDREMT_IN = BGDREMT_IN(-1) * (1+BGDREMT_IN_GR/100)
			
			BGD.append @identity BGDBMFSTINTECD = BGDGGEXPINTECN / BGDPANUSATLS
			BGD.append @identity BGDBMFSTCABTCD = BGDBMFSTREMTCD + BGDBMFSTINTECD + BGDBMFSTOTHRCD
			
			smpl %begin_date %end_estimate
				c = 0
			equation _BGDBMFSTOTHRCD.LS (BGDBMFSTOTHRCD/BGDNYGDPMKTPCD) = C(1) 
			
		'BALANCE
			BGD.append @IDENTITY BGDBNCABFUNDCD = BGDBNGSRGNFSCD + BGDBNFSTCABTCD
			BGD.APPEND @IDENTITY BGDBNGSRGNFSCD = BGDBXGSRGNFSCD - BGDBMGSRGNFSCD

		'FINANCIAL ACCOUNT
			BGD.append @IDENTITY BGDBFCAFFINXCD = BGDBFCAFFFDICD + BGDBFCAFFPFTCD + BGDBFCAFOTHRCD
			
			BGD.append @IDENTITY BGDBFFINAGOVCD = BGDGGFINEAMTCN / BGDPANUSATLS
			BGD.append @IDENTITY BGDBFFINDGOVCD = BGDGGFINEDSBCN / BGDPANUSATLS
			BGD.append @IDENTITY BGDBFFINOGOVCD = BGDGGFINEOTHCN / BGDPANUSATLS
			BGD.append @IDENTITY BGDBFFINTGOVCD = BGDBFFINAGOVCD + BGDBFFINDGOVCD + BGDBFFINOGOVCD
		
			BGD.append @IDENTITY BGDBFCAFOTHRCD = BGDBFCAFOOTHCD + BGDBFFINTGOVCD

			smpl 2000 %end_estimate
				c = 0
			equation _BGDBFCAFFFDICD.LS DLOG(BGDBFCAFFFDICD) = DLOG(BGDNYGDPMKTPCD) + C(1) * @DURING("2015")
			
			smpl 2014 %end_estimate
				c = 0
			equation _BGDBFCAFFPFTCD.LS DLOG(BGDBFCAFFPFTCD) = DLOG(BGDNYGDPMKTPCD) + C(1) * @DURING("2015")
			
			smpl 2018 %end_estimate
				c = 0
			equation _BGDBFCAFOOTHCD.LS @PC(BGDBFCAFOOTHCD) = @PC(BGDNYGDPMKTPCD) + C(1) * @DURING("2018")
		 
		'BALANCE OF PAYMENTS AND RESERVES
			BGD.append @IDENTITY BGDBFBOPTOTLCD = BGDBFCAFCAPTCD + BGDBFCAFFINXCD + BGDBNCABFUNDCD + BGDBFCAFNEOMCD
			
			BGD.append @IDENTITY BGDBFFINFGAPCD = BGDBFBOPTOTLCD + BGDBFCAFRACGCD
			
			smpl %begin_date %end_estimate
				c = 0
			equation _BGDBFCAFRACGCD.LS BGDBFCAFRACGCD = - BGDBFBOPTOTLCD + C(1) * DUMH
		
			smpl %begin_date %end_estimate
				c = 0
			equation _BGDFIRESTOTLCD.LS D(BGDFIRESTOTLCD) = - BGDBFCAFRACGCD + C(1) * DUMH

			'Exogenous variables : BGDBFCAFCAPTCD BGDBFCAFNEOMCD 

'***************************************************
'***************************************************
'MERGE ALL AVAILABLE EQUATIONS TO THE MODEL OBJECT
%eqlist=@wlookup("*","equation")  

for !i=1 to @wcount(%eqlist)  
  %eq = @word(%eqlist,!i) 
 	{%model}.merge {%eq}
next
'***************************************************
'***************************************************